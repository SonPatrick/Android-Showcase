/*
 * Copyright 2018 UGURCAN YILDIRIM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion sdk_versions.compile_sdk

    defaultConfig {
        applicationId app.id
        versionCode app.version_code
        versionName app.version_name

        minSdkVersion sdk_versions.min_sdk
        targetSdkVersion sdk_versions.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            //LOAD KEYSTORE PROPS FROM FILE
            def keystorePropertiesFile = file("keystore/keystore.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        /*admin {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug

            applicationIdSuffix ".admin"
        }*/
        debug {
            minifyEnabled false

            applicationIdSuffix ".debug"
            manifestPlaceholders = [appName: "DEBUG"]
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            manifestPlaceholders = [appName: "@string/app_name"]
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
        abortOnError false
    }
}

dependencies {
    //ANDROIDX
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    //ARCH
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'
    //TEST
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    //KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$dep_versions.kotlin"
    //DAGGER
    implementation "com.google.dagger:dagger:$dep_versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dep_versions.dagger"
    implementation "com.google.dagger:dagger-android:$dep_versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$dep_versions.dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dep_versions.dagger"
    //FIREBASE
    /*implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.0.5'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.firebase:firebase-firestore:17.1.3'
    implementation 'com.google.firebase:firebase-ads:17.1.1'
    implementation 'com.google.firebase:firebase-perf:16.2.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.6'*/
    //RX
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    //STATE
    implementation 'com.evernote:android-state:1.4.1'
    annotationProcessor 'com.evernote:android-state-processor:1.4.1'
    //RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$dep_versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$dep_versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$dep_versions.retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    //WASP DB
    implementation 'com.github.rehacktive:waspdb:1.1.1'
    //UI
    implementation 'com.ncapdevi:frag-nav:3.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.4'
    implementation 'com.github.Kennyc1012:MultiStateView:1.3.2'
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'
    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'com.github.tiagohm.MarkdownView:library:0.19.0'
    //UTIL
    implementation 'com.blankj:utilcode:1.22.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$dep_versions.leakcanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$dep_versions.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$dep_versions.leakcanary"
}

//apply plugin: 'com.google.gms.google-services'